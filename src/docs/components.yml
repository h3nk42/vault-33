components:
  schemas:
    TokenizeDataRequest:
      type: object
      additionalProperties: 
        type: string
      example:
        field-1: value1
        field-2: value2
        field-N: valueN
    DetokenizeDataRequest:
      type: object
      additionalProperties: 
        type: string
      example:
        field-1: tokenId1
        field-2: tokenId2
        field-N: tokenIdN
    TokenizeDataResponse:
      type: object
      additionalProperties: 
        type: string
      example:
        field-1: tokenId1
        field-2: tokenId2
        field-N: tokenIdN
    DetokenizeDataResponse:
      type: object
      additionalProperties: 
        type: string
      example:
        field-1: 
          found: true
          value: value1
          info: null
        field-2: 
          found: false
          value: null
          info: not allowed
        field-3: 
          found: false
          value: null
          info: internal error
        field-n: 
          found: false
          value: null
    LoginResponse:
      type: object
      additionalProperties: 
        type: string
      example:
        userId: 123,
        tokens:
          access:
            token: jwt
            expires: "2024-07-09T13:19:28.393Z"
    CreateApiKeyRequest:
      type: object
      properties: 
        roles:
          type: array
          items:
            type: string
      example:
        roles: ['service', 'serviceReadOnly', 'serviceWriteOnly']

    CreateApiKeyResponse:
      type: object
      properties: 
        apiKey:
          type: string
      example:
        apiKey: '123'

    RequestId:
      type: string
      format: uuid
      example: 5ebac534954b54139806c112
    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 401
            message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    InternalError:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 500
            message: Internal error

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

    apiKeyAuth:
      type: apiKey
      in: header
      name: x-api-key

